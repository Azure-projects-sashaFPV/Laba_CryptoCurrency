// <auto-generated />
using System;
using Laba_CryptoCurrency.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Laba_CryptoCurrency.Migrations
{
    [DbContext(typeof(DataManager))]
    partial class DataManagerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Laba_CryptoCurrency.Models.CryptoCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CryptoPair")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interval")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CryptoCurrencies");
                });

            modelBuilder.Entity("Laba_CryptoCurrency.Models.TimeInterval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CryptoCurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CryptoCurrencyId");

                    b.ToTable("TimeIntervals");
                });

            modelBuilder.Entity("Laba_CryptoCurrency.Models.TimeInterval", b =>
                {
                    b.HasOne("Laba_CryptoCurrency.Models.CryptoCurrency", null)
                        .WithMany("TimeIntervals")
                        .HasForeignKey("CryptoCurrencyId");
                });

            modelBuilder.Entity("Laba_CryptoCurrency.Models.CryptoCurrency", b =>
                {
                    b.Navigation("TimeIntervals");
                });
#pragma warning restore 612, 618
        }
    }
}
